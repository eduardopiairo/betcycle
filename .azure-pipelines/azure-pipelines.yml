# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
- feature/*

# pool:
#   vmImage: ubuntu-latest

pool: 
  vmImage: windows-2022

# pool: 
#   name: default
#   demands:
#     - agent.name -equals mydockeragent

name: 0.0.$(Rev:r)

steps:
- script: echo $(Build.BuildNumber)
  displayName: 'build number'


- task: PowerShell@2
  inputs:
    filePath: 'build/build_db_nuspec.ps1'
    arguments: 'betcycle-migrations'
  displayName: 'build and replace'

- task: PowerShell@2
  inputs:
    filePath: 'build/build_db_nuget_pack.ps1'
    arguments: 'betcycle-migrations $(Build.BuildNumber)'
  displayName: 'create pack'

# - task: PowerShell@2
#   inputs:
#     filePath: 'build/build_db_nuget_push.ps1'
#     arguments: 'betcycle-migrations $(Build.BuildNumber)'
#   displayName: 'publish pack'

- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

# - task: NuGetCommand@2
#   displayName: 'NuGet push'
#   inputs:
#     command: push
#     publishVstsFeed: 'betcycle/betcycle-artifacts'
#     allowPackageConflicts: true

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: './output'
    nuGetFeedType: 'internal'
    publishVstsFeed: betcycle/betcycle-artifacts'